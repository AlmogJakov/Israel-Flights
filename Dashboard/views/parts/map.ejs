<!DOCTYPE html>
<!--
    https://www.bingmapsportal.com/Application#    
    https://www.bing.com/api/maps/sdk/mapcontrol/isdk/loadmapasync#JS
    https://docs.microsoft.com/en-us/bingmaps/v8-web-control/map-control-concepts/pushpins/custom-image-pushpin-example    
    https://www.bigdatacloud.com/geocoding-apis
-->
<html>

<head>
    <!-- Should call 'bing' with https (not http) to work with Heroku -->
    <script type='text/javascript'
        src='https://www.bing.com/api/maps/mapcontrol?callback=GetMap&key=Av1tVjvviT_3a3JIBRJZNPhFNKHiCTqGL9C5rD7uAAVU2KFgx16V3NjFP58VCBvk'
        async defer>
    </script>
    <script type="text/javascript">
        var map, infobox, tooltip;
        var tooltipTemplate = '<div style="border-radius: 0.45rem;background-color:white;width:150px;padding:5px; padding-top:7px;text-align:center"><b>{title}</b></div>';
        function setMap() {
            socket = io.connect();
            socket.on('flights', function (msg) {
                add(msg);
            });
            // Conf of map style
            var myStyle = {
                "version": "1.0",
                "settings": {
                    "landColor": "#2a2a2a"
                },
                "elements": {
                    "mapElement": { "labelColor": "#FFFFFF", "labelOutlineColor": "#000000" },
                    "political": { "borderStrokeColor": "#696c6c", "borderOutlineColor": "#00000000" },
                    "point": { "iconColor": "#0C4152", "fillColor": "#000000", "strokeColor": "#0C4152" },
                    "transportation": { "strokeColor": "#000000", "fillColor": "#000000" },
                    "highway": { "strokeColor": "#b3b6b6", "fillColor": "#000000" },
                    "controlledAccessHighway": { "strokeColor": "#bebebe", "fillColor": "#000000" },
                    "arterialRoad": { "strokeColor": "#97a8ae", "fillColor": "#000000" },
                    "majorRoad": { "strokeColor": "#91a4ac", "fillColor": "#000000" },
                    "railway": { "strokeColor": "#889294", "fillColor": "#000000" },
                    "structure": { "fillColor": "#115166" },
                    "water": { "fillColor": "#10161a" },
                    "area": { "fillColor": "#4f5253" }
                }
            };
            // Initialize the map - USE YOUR OWN KEY !
            map = new Microsoft.Maps.Map(document.getElementById("myMap"), { 
                // credentials: "Av1tVjvviT_3a3JIBRJZNPhFNKHiCTqGL9C5rD7uAAVU2KFgx16V3NjFP58VCBvk", customMapStyle: myStyle,
                credentials: "Av1tVjvviT_3a3JIBRJZNPhFNKHiCTqGL9C5rD7uAAVU2KFgx16V3NjFP58VCBvk", customMapStyle: myStyle,
                allowHidingLabelsOfRoad: false
            });
			map.setView({
                center: new Microsoft.Maps.Location(33.027222, 32.0225),
                zoom: 6,
                labelOverlay: Microsoft.Maps.LabelOverlay.visible,
            });
            //Create an infobox to use as a tooltip when hovering.
            tooltip = new Microsoft.Maps.Infobox(map.getCenter(), {
                visible: false,
                showPointer: false,
                showCloseButton: false,
                offset: new Microsoft.Maps.Point(-75, 20)
            });
            tooltip.setMap(map);
            //Create an infobox for displaying detailed information.
            infobox = new Microsoft.Maps.Infobox(map.getCenter(), {
                visible: false
            });
            infobox.setMap(map);
        }
    </script>

    <script type='text/javascript'>
		// rotation
		// source: https://social.msdn.microsoft.com/Forums/sqlserver/en-US/02de6b85-ee3d-4780-a4fd-3b944f0fc1b4/rotate-custom-image-pushpin?forum=bingmapsajax
		// source: https://www.anycodings.com/1questions/5317334/how-to-rotate-pushpin-image-in-bing-map#:~:text=https%3A//bingmapsv8samples.azurewebsites.net/%23Pushpin_RotatedImage
		// source: https://github.com/microsoft/BingMapsV8CodeSamples/blob/main/Samples/Pushpins/Rotated%20Image/Pushpin%20Rotated%20Image.html
		// source: https://docs.microsoft.com/en-us/bingmaps/v8-web-control/map-control-concepts/pushpins/custom-canvas-pushpin-example
		// FIX: https://stackoverflow.com/questions/5820209/image-onload-event-not-working-in-chrome
		function createRotatedImagePushpin(location, url, rotationAngle, flightData, callback) {
			var img = new Image();
			img.onload = function () {
				var c = document.createElement('canvas');
				var rotationAngleRads = rotationAngle * Math.PI / 180;
			   //Calculate rotated image size.
                c.width = 45;
				c.height = 45;
				var context = c.getContext('2d');
				//Move to the center of the canvas.
				context.translate(c.width / 2, c.height / 2);
				//Rotate the canvas to the specified angle in degrees.
				context.rotate(rotationAngleRads);
				//Draw the image, since the context is rotated, the image will be rotated also.
				context.drawImage(img, -img.width / 2, -img.height / 2);
				var pin = new Microsoft.Maps.Pushpin(location, {
					//Generate a base64 image URL from the canvas.
					icon: c.toDataURL(),
                    roundClickableArea: true,
                    //title: filghtID,
					anchor: new Microsoft.Maps.Point(c.width / 2, c.height / 2) //Anchor to center of image.
				});
                var src_dst_details = ""
                if (flightData['source'] != null && flightData['destination'] !=null) {
                    src_dst_details = flightData['source'] + " -> " + flightData['destination'];
                }
                pin.metadata = {
                    title: 'ID: ' + flightData['id'] + "<br>" 
                    + "<span style=\"display:inline-block; padding-top: 2px; font-weight:normal; font-family:secondayFont;\">" + "Global ID: " + flightData['global_id'] + "</span><br>"
                    + "<span style=\"font-weight:normal; font-family:secondayFont;\">" + src_dst_details + "</span>",
                    description: 'Discription for pin ' + flightData['id']
                };
                // Add a mouse events to the pushpin.
                // Microsoft.Maps.Events.addHandler(pin, 'click', pushpinClicked);
                Microsoft.Maps.Events.addHandler(pin, 'mouseover', pushpinHovered);
                Microsoft.Maps.Events.addHandler(pin, 'mouseout', closeTooltip);
				if (callback) { callback(pin); }
			};
			//Allow cross domain image editting.
			img.crossOrigin = 'anonymous';
			img.src = url;
		}
		// A func to update the flights on when new flight data is received
        async function add(flightsData) {
            var json = JSON.parse(flightsData)
            var keys = Object.keys(json);
            var pinsPromises = [];
            var resultPinsValues = [];
            for (var i = 0; i < keys.length; i++) {
                var filghtID = keys[i];
                var flightData = json[filghtID][0];
                var coordinate_x = JSON.stringify(flightData['coordinate_x']);
                var coordinate_y = JSON.stringify(flightData['coordinate_y']);
                var degree = JSON.stringify(flightData['degree']);
                var loc = new Microsoft.Maps.Location(coordinate_x, coordinate_y);
                var pinFunc =
                    new Promise(async function (resolve, reject) {
                        await createRotatedImagePushpin(loc, 'airplane.png', degree, flightData, function (pin) {
                            resolve(pin);
                        });
                    });
                pinsPromises.push(pinFunc);
                await Promise.all(pinsPromises).then((values) => {
                    resultPinsValues = values;
                });
            }
            map.entities.clear();
            for (const pinV of resultPinsValues) {
                map.entities.push(pinV);
            }
        }
        // A func to show flight info on mouse hover
        function pushpinHovered(e) {
        //Hide the infobox
        infobox.setOptions({ visible: false });
        //Make sure the infobox has metadata to display.
        if (e.target.metadata) {
            //Set the infobox options with the metadata of the pushpin.
            tooltip.setOptions({
                location: e.target.getLocation(),
                htmlContent: tooltipTemplate.replace('{title}', e.target.metadata.title),
                visible: true
            });
        }
    }
    // A func to close the tooltip on mouseout
    function closeTooltip() {
        //Close the tooltip.
        tooltip.setOptions({
            visible: false
        });
    }
    </script>
</head>

<body onload="setMap()">
    <div class="map-container" style="width: 98%; height: calc(100% - 250px);">
        <div style="display: table; height: 600px; margin-left: auto; margin-right: auto; margin: auto;">
            <div style="display: table-row; ">
                <div class="map" id="myMap" style="width: 1000px; display: table-cell;"></div>
                <div class="map-side">
                    <section style="font-size: 24px;">Welcome!</section>
                    <div style="width:380px; margin-left: auto;margin-right: auto; font-family: sans-serif; font-weight:lighter; text-align: left;">
                        <b>Please note:</b><br><br>
                        <ol>
                        <li style="font-size:14px">
                        The flights information is received from the DataEntry server [if the DataEntry server is running].<br>
                        </li><br>
                        <li style="font-size:14px">
                        The information for the flight arrival prediction is received from the DataLake server [if both the DataEntry server and the DataLake server are running].<br>
                        </li><br>
                        <li style="font-size:14px">
                        The flight arrival prediction can be seen by clicking on the appropriate button below.<br>
                        </li>
                        </ol>
                    </div>
                    <table style="position:relative;margin-left: auto;margin-right: auto;">
                            <a id="second_button" href="#" class="btn" style="width:380px;margin-left: auto;margin-right: auto;">
                                Flights waiting to land:&nbsp;<section id="second_button_number">N/A</section>
                            </a> 
                            <a id="first_button" href="#" class="btn" style="width:380px;margin-left: auto;margin-right: auto;">
                                Flights waiting to take off:&nbsp;<section id="first_button_number">N/A</section>
                            </a>
                    </table>
                    <!-- Weater Widget: https://www.tomorrow.io/weather/widget/ -->
                    <script>
                    (function(d, s, id) {
                        if (d.getElementById(id)) {
                            if (window.__TOMORROW__) {
                                window.__TOMORROW__.renderWidget();
                            }
                            return;}
                        const fjs = d.getElementsByTagName(s)[0];
                        const js = d.createElement(s);
                        js.id = id;
                        js.src = "https://www.tomorrow.io/v1/widget/sdk/sdk.bundle.min.js";
                        fjs.parentNode.insertBefore(js, fjs);
                    })(document, 'script', 'tomorrow-sdk');
                    </script>
                    <div class="tomorrow"
                        data-location-id="057564"
                        data-language="EN"
                        data-unit-system="METRIC"
                        data-skin="dark"
                        data-widget-type="aqiMini"
                        style="padding-bottom:22px;position:relative; margin-left: auto;margin-right: auto; max-width: 376px;">
                        <a href="https://www.tomorrow.io/weather/"
                        rel="nofollow noopener noreferrer"
                        target="_blank"
                        style="position: absolute; bottom: 0; transform: translateX(-50%); left: 50%;">
                        <img alt="Powered by Tomorrow.io"
                            src="https://weather-website-client.tomorrow.io/img/powered-by-tomorrow.svg"
                            width="140"
                            height="15" />
                        </a>
                    </div>
                    <!-- END Weater Widget -->

                    <script type="text/javascript">
                        socket.on('flights', (data) => {
                            var data = JSON.parse(data);
                            var keys = Object.keys(data);
                            let waiting_to_take_off = 0;
                            let waiting_to_land = 0;
                            keys.forEach(function (key) {
                                if (data[key][0]["landed"] == false) {
                                    if (data[key][0]["extended_info"]["real_departure_time"] != null) waiting_to_land++;
                                    else waiting_to_take_off++;
                                }
                            });
                            document.querySelector("#first_button_number").innerText = waiting_to_take_off;
                            document.querySelector("#second_button_number").innerText = waiting_to_land;
                        });
                    </script>
                </div>
            </div>
        </div>
    </div>
</body>
</html>